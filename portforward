import io.fabric8.kubernetes.api.model.Pod;
import io.fabric8.kubernetes.api.model.Service;
import io.fabric8.kubernetes.client.DefaultKubernetesClient;
import io.fabric8.kubernetes.client.KubernetesClient;
import io.fabric8.kubernetes.client.dsl.internal.PortForwarderWebsocket;
import io.fabric8.kubernetes.client.dsl.PodResource;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.net.Socket;

public class PortForwardExample {
    public static void main(String[] args) {
        String namespace = "default";
        String serviceName = "my-service";
        int servicePort = 9090;
        int localPort = 9090;

            portForwarder.forward(new URI(client.getConfiguration().getMasterUrl() + "api/v1/namespaces/" + namespace + "/pods/" + pod.getMetadata().getName() + "/portforward"), LOCAL_PORT, POD_PORT);


        try (KubernetesClient client = new DefaultKubernetesClient()) {
            // Get the service
            Service service = client.services().inNamespace(namespace).withName(serviceName).get();
            if (service == null) {
                System.out.println("Service not found!");
                return;
            }

            // Get the first pod associated with the service
            Pod pod = client.pods().inNamespace(namespace).withLabels(service.getSpec().getSelector()).list().getItems().get(0);
            if (pod == null) {
                System.out.println("No pods found for the service!");
                return;
            }

            // Port forward from local port to pod port
            PodResource<Pod> podResource = client.pods().inNamespace(namespace).withName(pod.getMetadata().getName());
            try (PortForwarderWebsocket portForwarder = new PortForwarderWebsocket(client.getConfiguration())) {
                portForwarder.forward(podResource, servicePort, new InetSocketAddress("localhost", localPort));

                // Keeping the port forwarding open until user stops the program
                System.out.println("Port forwarding from localhost:" + localPort + " to " + pod.getMetadata().getName() + ":" + servicePort);
                System.out.println("Press Ctrl+C to stop...");
                Thread.currentThread().join();
            } catch (IOException | InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
}
